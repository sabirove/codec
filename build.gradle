/*
 * Copyright 2019 Sabirov Evgenii (sabirov.e@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'com.github.spotbugs' version '3.0.0'
}

group 'com.github.sabirove'
version '1.0.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'com.github.spotbugs:spotbugs-annotations:3.1.12'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    configure(options) {    //support Java 8 level javadoc tags
        tags(
                'apiNote:a:API Note:',
                'implSpec:a:Implementation Requirements:',
                'implNote:a:Implementation Note:'
        )
    }
}

/*
 * Publish
 */

apply from: "$rootDir/gradle/publish.gradle"


/*
 * Coverage
 */

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            //exclude code reused from common-codec lib from coverage report
            fileTree(dir: it, exclude: 'com/github/sabirove/codec/util/base64/**')
        }))
    }
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}


/*
 * Spotbugs
 */

spotbugs {
    toolVersion = '3.1.12'
    excludeFilter = file("spotbugs-exclude.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}
